JWT deep tips:
1. On java, common library/framework for JWT is "org.jose4j" [https://github.com/RbkGh/Jose4j]
2. JWT, JWS, JWK
3. JOSE stands for "Javascript Object Signing and Encryption"
4. A very good article to explain JWT/JWS/JWE (https://medium.facilelogin.com/jwt-jws-and-jwe-for-not-so-dummies-b63310d201a3)
5. JWT How to tell if you have a JWS or JWE? (https://riptutorial.com/jwt/example/18898/how-to-tell-if-you-have-a-jws-or-jwe-)
    # Example: 
    From Section 9 of JSON Web Encryption specification (RFC 7516): 
    The JOSE Header for a JWS can be distinguished from the JOSE Header for a JWE by examining the "alg" (algorithm) Header Parameter value. 
    If the value represents a digital signature or MAC algorithm, or is the value "none", it is for a JWS; 
    if it represents a Key Encryption, Key Wrapping, Direct Key Agreement, Key Agreement with Key Wrapping, or Direct Encryption algorithm, it is for a JWE. 
    
    (Extracting the "alg" value to examine is straightforward when using the JWS Compact Serialization or the JWE Compact Serialization
    and may be more difficult when using the JWS JSON Serialization or the JWE JSON Serialization.)
    
    And The JOSE Header for a JWS can also be distinguished from the JOSE Header for a JWE by determining whether an "enc" (encryption algorithm) member exists. 
    If the "enc" member exists, it is a JWE; otherwise, it is a JWS.

     JWS (signed)
     {
         "alg": "HS256"
     }
     
     JWE (encrypted)
     {
         "alg":"RSA1_5",
         "enc":"A256GCM",
         "iv":"__79_Pv6-fg",
         "x5t":"7noOPq-hJ1_hCnvWh6IeYI2w9Q0"
     }
